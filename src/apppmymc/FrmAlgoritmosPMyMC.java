/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apppmymc;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan Barrantes
 */
public class FrmAlgoritmosPMyMC extends javax.swing.JFrame {

    /**
     * Creates new form FrmAlgoritmosPCyMC
     */
    private String Y;
    private String X;
    private String R;
    private List<Semilla> listSemillas = new ArrayList<>();
    private FrmPruebas PUA = new FrmPruebas();

    public FrmAlgoritmosPMyMC() {
        initComponents();
        this.setLocationRelativeTo(null);
        /*
        Utilities.cambiarTamañoTabla(tablaPM);
        Utilities.centrarCeldasTabla(tablaPM, new int[]{0, 1, 2, 3});
        Utilities.cambiarTamañoTabla(tablaMC);
        Utilities.centrarCeldasTabla(tablaMC, new int[]{0, 1, 2, 3});
         */
        this.txtCantNumerosPM.requestFocus();
    }

    private void limpiarTabla(DefaultTableModel model, JTable tabla) {
        int cant = tabla.getRowCount();
        for (int i = 0; i < cant; i++) {
            for (int j = 0; j < tabla.getRowCount(); j++) {
                model.removeRow(j);
            }
        }
    }

    private int existe(Semilla semilla) {
        int pos = -1;
        for (int i = 0; i < listSemillas.size(); i++) {
            //System.out.println(semilla.getX0() + " con " + listSemillas.get(i).getX0() + " | " + semilla.getX1() + " con " + listSemillas.get(i).getX1());
            if (listSemillas.get(i).getX0() == semilla.getX0() && listSemillas.get(i).getX1() == semilla.getX1()) {
                pos = i;
                //System.out.println(semilla.getX0() + " con " + listSemillas.get(i).getX0() + " | " + semilla.getX1() + " con " + listSemillas.get(i).getX1());
                //System.out.println("encontro pos : " + (i+1) + " comparo con " + semilla.getX0() + " -- " + semilla.getX1());
                break;
            }
        }
        //System.out.println("----------------------------------------------");
        return pos;
    }

    private int existeMC(Semilla semilla) {
        int pos = -1;
        for (int i = 0; i < listSemillas.size(); i++) {
            //System.out.println(semilla.getX1() + " con " + listSemillas.get(i).getX1());
            if (listSemillas.get(i).getX0() == semilla.getX0()) {
                pos = i;
                //System.out.println(semilla.getX0() + " con " + listSemillas.get(i).getX0());
                //System.out.println("encontro pos : " + (i + 1) + " comparo con " + listSemillas.get(i).getX0() + " -- " + semilla.getX0());
                break;
            }
        }
        //System.out.println("----------------------------------------------");
        return pos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtX0PM = new javax.swing.JTextField();
        txtX1PM = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCantNumerosPM = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDPM = new javax.swing.JTextField();
        btnHallarNumerosPM = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPM = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lblDondeRepite = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnAleatoriedad = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtX0MC = new javax.swing.JTextField();
        txtX1MC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCantNumMC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDMC = new javax.swing.JTextField();
        btnHallarNumerosMC = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMC = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblDondeRepite2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnAleatoriedad1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GENERACIÓN DE NUMEROS PSEUDOALEATORIOS");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setText("X0");

        txtX0PM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtX0PM.setText("5015");
        txtX0PM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtX0PMKeyTyped(evt);
            }
        });

        txtX1PM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtX1PM.setText("5734");
        txtX1PM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtX1PMKeyTyped(evt);
            }
        });

        jLabel6.setText("X1");

        jLabel7.setText("CANT. NUMEROS");

        txtCantNumerosPM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCantNumerosPM.setText("5");
        txtCantNumerosPM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantNumerosPMKeyTyped(evt);
            }
        });

        jLabel8.setText("D");

        txtDPM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDPM.setText("4");
        txtDPM.setEnabled(false);

        btnHallarNumerosPM.setText("HALLAR NUMEROS");
        btnHallarNumerosPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHallarNumerosPMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantNumerosPM, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtX0PM, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtX1PM, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnHallarNumerosPM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtDPM, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtX1PM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtX0PM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantNumerosPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHallarNumerosPM)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tablaPM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Yi", "Xi", "Ri"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPM);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel9.setText("POSICION DESDE DONDE SE REPITE:");

        jButton1.setText("Pruebas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAleatoriedad.setText("ALEATORIEDAD");
        btnAleatoriedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAleatoriedadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDondeRepite, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAleatoriedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(btnAleatoriedad))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblDondeRepite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("PRODUCTOS MEDIOS", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("X0");

        txtX0MC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtX0MC.setText("9803");
        txtX0MC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtX0MCKeyTyped(evt);
            }
        });

        txtX1MC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtX1MC.setText("6965");
        txtX1MC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtX1MCKeyTyped(evt);
            }
        });

        jLabel2.setText("Constante \"a\"");

        jLabel3.setText("CANT. NUMEROS");

        txtCantNumMC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCantNumMC.setText("5");
        txtCantNumMC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantNumMCKeyTyped(evt);
            }
        });

        jLabel4.setText("D");

        txtDMC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDMC.setText("4");
        txtDMC.setEnabled(false);

        btnHallarNumerosMC.setText("HALLAR NUMEROS");
        btnHallarNumerosMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHallarNumerosMCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantNumMC, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtX0MC, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtX1MC, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnHallarNumerosMC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtDMC, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtX1MC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtX0MC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantNumMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHallarNumerosMC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tablaMC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Yi", "Xi", "Ri"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaMC);
        if (tablaMC.getColumnModel().getColumnCount() > 0) {
            tablaMC.getColumnModel().getColumn(0).setResizable(false);
            tablaMC.getColumnModel().getColumn(1).setResizable(false);
            tablaMC.getColumnModel().getColumn(2).setResizable(false);
            tablaMC.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setText("POSICION DESDE DONDE SE REPITE:");

        jButton2.setText("Pruebas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnAleatoriedad1.setText("ALEATORIEDAD");
        btnAleatoriedad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAleatoriedad1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDondeRepite2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAleatoriedad1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAleatoriedad1))
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDondeRepite2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("MULTIPLICADOR CONSTANTE", jPanel5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHallarNumerosPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHallarNumerosPMActionPerformed
        // TODO add your handling code here:
        listSemillas.clear();
        boolean encontro = false;
        if (this.txtX0PM.getText().length() > 3 && this.txtX1PM.getText().length() > 3) {
            if (this.txtX0PM.getText().length() == this.txtX1PM.getText().length()) {
                this.txtDPM.setText(String.valueOf(this.txtX0PM.getText().length()));
                int temp;
                String tempCadena;
                int posi;
                int posf;
                int x0 = Integer.parseInt(this.txtX0PM.getText());
                int x1 = Integer.parseInt(this.txtX1PM.getText());
                float r;
                DefaultTableModel model = (DefaultTableModel) this.tablaPM.getModel();
                limpiarTabla(model, tablaPM);
                Object[] fila = new Object[4];
                for (int i = 0; i < Integer.parseInt(this.txtCantNumerosPM.getText()); i++) {
                    //PARA Y
                    temp = x0 * x1;
                    //VERIFICAMOS SI TENEMOS QUE AGREGAR CEROS
                    tempCadena = String.valueOf(temp);
                    if ((String.valueOf(temp).length() - Integer.parseInt(this.txtDPM.getText())) % 2 != 0) {
                        //AGREGAMOS CEROS
                        tempCadena = "0" + String.valueOf(temp);
                    }
                    this.Y = "Y" + (+i) + " (" + x0 + ")(" + x1 + ") = " + tempCadena;
                    posi = ((tempCadena.length() - Integer.parseInt(this.txtDPM.getText())) / 2);
                    posf = posi + Integer.parseInt(this.txtDPM.getText());
                    tempCadena = tempCadena.substring(posi, posf);
                    this.X = tempCadena;
                    this.R = "0." + tempCadena;
                    //AGREGAMOS A LA TABLA
                    fila[0] = (i + 1);
                    fila[1] = this.Y;
                    fila[2] = this.X;
                    fila[3] = this.R;
                    if (Integer.parseInt(X) == 0) {
                        break;
                    }
                    r = Float.parseFloat(this.R);
                    Semilla semilla = new Semilla(x0, x1, r);
                    int pos = existe(semilla);
                    if (pos != -1) {
                        //System.out.println("--------------- i :" + (i + 1));
                        if (!encontro) {
                            encontro = true;
                            this.lblDondeRepite.setText("" + (i + 1));

                            this.tablaPM.setDefaultRenderer(Object.class, new Resaltador(pos, i));
                        }
                    }
                    listSemillas.add(semilla);
                    x0 = x1;
                    x1 = Integer.parseInt(tempCadena);
                    model.addRow(fila);
                }
                PUA.ReciboCadena(listSemillas);
                /*  for (int i = 0; i < listSemillas.size(); i++) {
                    System.out.println(" pos "+i+" :>"+listSemillas.get(i).getR());
                }*/
                if(!encontro){
                    //SI NO ENCONTRO CAMBIAMOS LOS TAMAÑOS SOLAMENTE
                    Utilities.cambiarTamañoTabla(tablaPM);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Las semillas deben tener el mismo numero de dígitos", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Las semillas deben ser de más 3 dígitos", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnHallarNumerosPMActionPerformed

    private void btnHallarNumerosMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHallarNumerosMCActionPerformed
        // TODO add your handling code here:
        listSemillas.clear();
        boolean encontro = false;
        if (this.txtX0MC.getText().length() > 3) {
            if (this.txtX0MC.getText().length() == this.txtX1MC.getText().length()) {
                this.txtDMC.setText(String.valueOf(this.txtX0MC.getText().length()));
                int temp;
                String tempCadena;
                int posi;
                int posf;
                int x0 = Integer.parseInt(this.txtX0MC.getText());
                int x1 = Integer.parseInt(this.txtX1MC.getText());
                float r;
                DefaultTableModel model = (DefaultTableModel) this.tablaMC.getModel();
                limpiarTabla(model, tablaMC);
                Object[] fila = new Object[4];
                for (int i = 0; i < Integer.parseInt(this.txtCantNumMC.getText()); i++) {
                    //PARA Y
                    temp = x0 * x1;
                    //VERIFICAMOS SI TENEMOS QUE AGREGAR CEROS
                    tempCadena = String.valueOf(temp);
                    if ((String.valueOf(temp).length() - Integer.parseInt(this.txtDMC.getText())) % 2 != 0) {
                        //AGREGAMOS CEROS
                        tempCadena = "0" + String.valueOf(temp);
                    }
                    this.Y = "Y" + (+i) + " (" + x1 + ")(" + x0 + ") = " + tempCadena;
                    posi = ((tempCadena.length() - Integer.parseInt(this.txtDMC.getText())) / 2);
                    posf = posi + Integer.parseInt(this.txtDMC.getText());
                    tempCadena = tempCadena.substring(posi, posf);

                    this.X = tempCadena;
                    this.R = "0." + tempCadena;
                    //System.out.println(this.Y + " | " + this.X + " | " + this.R);
                    //AGREGAMOS A LA TABLA
                    fila[0] = (i + 1);
                    fila[1] = this.Y;
                    fila[2] = this.X;
                    fila[3] = this.R;
                    if (Integer.parseInt(X) == 0) {
                        break;
                    }
                    r = Float.parseFloat(this.R);
                    Semilla semilla = new Semilla(x0, x1, r);
                    int pos = existeMC(semilla);
                    if (pos != -1) {
                        //System.out.println("--------------- i :" + (i + 1));
                        if (!encontro) {
                            encontro = true;
                            this.lblDondeRepite2.setText("" + (i + 1));
                            this.tablaMC.setDefaultRenderer(Object.class, new Resaltador(pos, i));
                        }
                    }
                    listSemillas.add(semilla);
                    //x0 = x1;
                    x0 = Integer.parseInt(tempCadena);
                    model.addRow(fila);
                }
                PUA.ReciboCadena(listSemillas);
                if(!encontro){
                    //SI NO ENCONTRO CAMBIAMOS LOS TAMAÑOS SOLAMENTE
                    Utilities.cambiarTamañoTabla(tablaMC);
                }
            } else {
                JOptionPane.showMessageDialog(this, "La semilla debe tener el mismo numero de dígitos", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Las semillas deben ser de más 3 dígitos", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnHallarNumerosMCActionPerformed

    private void txtCantNumerosPMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantNumerosPMKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosPM.doClick();
        }
    }//GEN-LAST:event_txtCantNumerosPMKeyTyped

    private void txtX0PMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtX0PMKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosPM.doClick();
        }
    }//GEN-LAST:event_txtX0PMKeyTyped

    private void txtX1PMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtX1PMKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosPM.doClick();
        }
    }//GEN-LAST:event_txtX1PMKeyTyped

    private void txtCantNumMCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantNumMCKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosMC.doClick();
        }
    }//GEN-LAST:event_txtCantNumMCKeyTyped

    private void txtX0MCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtX0MCKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosMC.doClick();
        }
    }//GEN-LAST:event_txtX0MCKeyTyped

    private void txtX1MCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtX1MCKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER) {
            this.btnHallarNumerosMC.doClick();
        }
    }//GEN-LAST:event_txtX1MCKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PUA.setVisible(true);
        PUA.mostrar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PUA.setVisible(true);
        PUA.mostrar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAleatoriedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAleatoriedadActionPerformed
        // TODO add your handling code here:
        if (this.tablaPM.getRowCount() > 0) {
            FrmAleatoriedad ale = new FrmAleatoriedad(this, true, this.tablaPM);
            ale.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor genere primeros los números para probar!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnAleatoriedadActionPerformed

    private void btnAleatoriedad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAleatoriedad1ActionPerformed
        // TODO add your handling code here:
        if (this.tablaMC.getRowCount() > 0) {
            FrmAleatoriedad ale = new FrmAleatoriedad(this, true,this.tablaMC);
            ale.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor genere primeros los números para probar!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAleatoriedad1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAlgoritmosPMyMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAlgoritmosPMyMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAlgoritmosPMyMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAlgoritmosPMyMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAlgoritmosPMyMC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAleatoriedad;
    private javax.swing.JButton btnAleatoriedad1;
    private javax.swing.JButton btnHallarNumerosMC;
    private javax.swing.JButton btnHallarNumerosPM;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDondeRepite;
    private javax.swing.JLabel lblDondeRepite2;
    private javax.swing.JTable tablaMC;
    private javax.swing.JTable tablaPM;
    private javax.swing.JTextField txtCantNumMC;
    private javax.swing.JTextField txtCantNumerosPM;
    private javax.swing.JTextField txtDMC;
    private javax.swing.JTextField txtDPM;
    private javax.swing.JTextField txtX0MC;
    private javax.swing.JTextField txtX0PM;
    private javax.swing.JTextField txtX1MC;
    private javax.swing.JTextField txtX1PM;
    // End of variables declaration//GEN-END:variables
}
